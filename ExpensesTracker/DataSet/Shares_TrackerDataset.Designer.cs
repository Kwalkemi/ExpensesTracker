//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ExpensesTracker.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Shares_TrackerDataset")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Shares_TrackerDataset : global::System.Data.DataSet {
        
        private SHARE_TRACKER_PROCEDURE_DELIVERYDataTable tableSHARE_TRACKER_PROCEDURE_DELIVERY;
        
        private SHARE_TRACKER_PROCEDURE_OPTIONDataTable tableSHARE_TRACKER_PROCEDURE_OPTION;
        
        private SHARE_DETAIL_PROCEDUREDataTable tableSHARE_DETAIL_PROCEDURE;
        
        private SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT;
        
        private SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable tableSHARE_TRACKER_PROCEDURE_DIVIDEND;
        
        private SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING;
        
        private SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES;
        
        private CURRENT_SHARE_PROCEDUREDataTable tableCURRENT_SHARE_PROCEDURE;
        
        private SHARE_WISE_PROFITDataTable tableSHARE_WISE_PROFIT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Shares_TrackerDataset() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected Shares_TrackerDataset(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_DELIVERY"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_DELIVERYDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_DELIVERY"]));
                }
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_OPTION"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_OPTIONDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_OPTION"]));
                }
                if ((ds.Tables["SHARE_DETAIL_PROCEDURE"] != null)) {
                    base.Tables.Add(new SHARE_DETAIL_PROCEDUREDataTable(ds.Tables["SHARE_DETAIL_PROCEDURE"]));
                }
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT"]));
                }
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_DIVIDEND"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_DIVIDEND"]));
                }
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING"]));
                }
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_EXTRA_CHARGES"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_EXTRA_CHARGES"]));
                }
                if ((ds.Tables["CURRENT_SHARE_PROCEDURE"] != null)) {
                    base.Tables.Add(new CURRENT_SHARE_PROCEDUREDataTable(ds.Tables["CURRENT_SHARE_PROCEDURE"]));
                }
                if ((ds.Tables["SHARE_WISE_PROFIT"] != null)) {
                    base.Tables.Add(new SHARE_WISE_PROFITDataTable(ds.Tables["SHARE_WISE_PROFIT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHARE_TRACKER_PROCEDURE_DELIVERYDataTable SHARE_TRACKER_PROCEDURE_DELIVERY {
            get {
                return this.tableSHARE_TRACKER_PROCEDURE_DELIVERY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHARE_TRACKER_PROCEDURE_OPTIONDataTable SHARE_TRACKER_PROCEDURE_OPTION {
            get {
                return this.tableSHARE_TRACKER_PROCEDURE_OPTION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHARE_DETAIL_PROCEDUREDataTable SHARE_DETAIL_PROCEDURE {
            get {
                return this.tableSHARE_DETAIL_PROCEDURE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT {
            get {
                return this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable SHARE_TRACKER_PROCEDURE_DIVIDEND {
            get {
                return this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING {
            get {
                return this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable SHARE_TRACKER_PROCEDURE_EXTRA_CHARGES {
            get {
                return this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CURRENT_SHARE_PROCEDUREDataTable CURRENT_SHARE_PROCEDURE {
            get {
                return this.tableCURRENT_SHARE_PROCEDURE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHARE_WISE_PROFITDataTable SHARE_WISE_PROFIT {
            get {
                return this.tableSHARE_WISE_PROFIT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Shares_TrackerDataset cln = ((Shares_TrackerDataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_DELIVERY"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_DELIVERYDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_DELIVERY"]));
                }
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_OPTION"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_OPTIONDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_OPTION"]));
                }
                if ((ds.Tables["SHARE_DETAIL_PROCEDURE"] != null)) {
                    base.Tables.Add(new SHARE_DETAIL_PROCEDUREDataTable(ds.Tables["SHARE_DETAIL_PROCEDURE"]));
                }
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT"]));
                }
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_DIVIDEND"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_DIVIDEND"]));
                }
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING"]));
                }
                if ((ds.Tables["SHARE_TRACKER_PROCEDURE_EXTRA_CHARGES"] != null)) {
                    base.Tables.Add(new SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable(ds.Tables["SHARE_TRACKER_PROCEDURE_EXTRA_CHARGES"]));
                }
                if ((ds.Tables["CURRENT_SHARE_PROCEDURE"] != null)) {
                    base.Tables.Add(new CURRENT_SHARE_PROCEDUREDataTable(ds.Tables["CURRENT_SHARE_PROCEDURE"]));
                }
                if ((ds.Tables["SHARE_WISE_PROFIT"] != null)) {
                    base.Tables.Add(new SHARE_WISE_PROFITDataTable(ds.Tables["SHARE_WISE_PROFIT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSHARE_TRACKER_PROCEDURE_DELIVERY = ((SHARE_TRACKER_PROCEDURE_DELIVERYDataTable)(base.Tables["SHARE_TRACKER_PROCEDURE_DELIVERY"]));
            if ((initTable == true)) {
                if ((this.tableSHARE_TRACKER_PROCEDURE_DELIVERY != null)) {
                    this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.InitVars();
                }
            }
            this.tableSHARE_TRACKER_PROCEDURE_OPTION = ((SHARE_TRACKER_PROCEDURE_OPTIONDataTable)(base.Tables["SHARE_TRACKER_PROCEDURE_OPTION"]));
            if ((initTable == true)) {
                if ((this.tableSHARE_TRACKER_PROCEDURE_OPTION != null)) {
                    this.tableSHARE_TRACKER_PROCEDURE_OPTION.InitVars();
                }
            }
            this.tableSHARE_DETAIL_PROCEDURE = ((SHARE_DETAIL_PROCEDUREDataTable)(base.Tables["SHARE_DETAIL_PROCEDURE"]));
            if ((initTable == true)) {
                if ((this.tableSHARE_DETAIL_PROCEDURE != null)) {
                    this.tableSHARE_DETAIL_PROCEDURE.InitVars();
                }
            }
            this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT = ((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable)(base.Tables["SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT"]));
            if ((initTable == true)) {
                if ((this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT != null)) {
                    this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.InitVars();
                }
            }
            this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND = ((SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable)(base.Tables["SHARE_TRACKER_PROCEDURE_DIVIDEND"]));
            if ((initTable == true)) {
                if ((this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND != null)) {
                    this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.InitVars();
                }
            }
            this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING = ((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable)(base.Tables["SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING"]));
            if ((initTable == true)) {
                if ((this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING != null)) {
                    this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.InitVars();
                }
            }
            this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES = ((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable)(base.Tables["SHARE_TRACKER_PROCEDURE_EXTRA_CHARGES"]));
            if ((initTable == true)) {
                if ((this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES != null)) {
                    this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.InitVars();
                }
            }
            this.tableCURRENT_SHARE_PROCEDURE = ((CURRENT_SHARE_PROCEDUREDataTable)(base.Tables["CURRENT_SHARE_PROCEDURE"]));
            if ((initTable == true)) {
                if ((this.tableCURRENT_SHARE_PROCEDURE != null)) {
                    this.tableCURRENT_SHARE_PROCEDURE.InitVars();
                }
            }
            this.tableSHARE_WISE_PROFIT = ((SHARE_WISE_PROFITDataTable)(base.Tables["SHARE_WISE_PROFIT"]));
            if ((initTable == true)) {
                if ((this.tableSHARE_WISE_PROFIT != null)) {
                    this.tableSHARE_WISE_PROFIT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Shares_TrackerDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Shares_TrackerDataset.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSHARE_TRACKER_PROCEDURE_DELIVERY = new SHARE_TRACKER_PROCEDURE_DELIVERYDataTable();
            base.Tables.Add(this.tableSHARE_TRACKER_PROCEDURE_DELIVERY);
            this.tableSHARE_TRACKER_PROCEDURE_OPTION = new SHARE_TRACKER_PROCEDURE_OPTIONDataTable();
            base.Tables.Add(this.tableSHARE_TRACKER_PROCEDURE_OPTION);
            this.tableSHARE_DETAIL_PROCEDURE = new SHARE_DETAIL_PROCEDUREDataTable();
            base.Tables.Add(this.tableSHARE_DETAIL_PROCEDURE);
            this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT = new SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable();
            base.Tables.Add(this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT);
            this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND = new SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable();
            base.Tables.Add(this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND);
            this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING = new SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable();
            base.Tables.Add(this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING);
            this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES = new SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable();
            base.Tables.Add(this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES);
            this.tableCURRENT_SHARE_PROCEDURE = new CURRENT_SHARE_PROCEDUREDataTable();
            base.Tables.Add(this.tableCURRENT_SHARE_PROCEDURE);
            this.tableSHARE_WISE_PROFIT = new SHARE_WISE_PROFITDataTable();
            base.Tables.Add(this.tableSHARE_WISE_PROFIT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSHARE_TRACKER_PROCEDURE_DELIVERY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSHARE_TRACKER_PROCEDURE_OPTION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSHARE_DETAIL_PROCEDURE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSHARE_TRACKER_PROCEDURE_DIVIDEND() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCURRENT_SHARE_PROCEDURE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSHARE_WISE_PROFIT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Shares_TrackerDataset ds = new Shares_TrackerDataset();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEventHandler(object sender, SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEventHandler(object sender, SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SHARE_DETAIL_PROCEDURERowChangeEventHandler(object sender, SHARE_DETAIL_PROCEDURERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEventHandler(object sender, SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEventHandler(object sender, SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEventHandler(object sender, SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEventHandler(object sender, SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CURRENT_SHARE_PROCEDURERowChangeEventHandler(object sender, CURRENT_SHARE_PROCEDURERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SHARE_WISE_PROFITRowChangeEventHandler(object sender, SHARE_WISE_PROFITRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHARE_TRACKER_PROCEDURE_DELIVERYDataTable : global::System.Data.TypedTableBase<SHARE_TRACKER_PROCEDURE_DELIVERYRow> {
            
            private global::System.Data.DataColumn columnSHARES_TRACKER_HEADER_ID;
            
            private global::System.Data.DataColumn columnSHARES_NAME;
            
            private global::System.Data.DataColumn columnSHARE_AMT;
            
            private global::System.Data.DataColumn columnPROFIT_LOSS;
            
            private global::System.Data.DataColumn columnSERVICES;
            
            private global::System.Data.DataColumn columnIS_DP_BILL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DELIVERYDataTable() {
                this.TableName = "SHARE_TRACKER_PROCEDURE_DELIVERY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_DELIVERYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SHARE_TRACKER_PROCEDURE_DELIVERYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_TRACKER_HEADER_IDColumn {
                get {
                    return this.columnSHARES_TRACKER_HEADER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_NAMEColumn {
                get {
                    return this.columnSHARES_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARE_AMTColumn {
                get {
                    return this.columnSHARE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROFIT_LOSSColumn {
                get {
                    return this.columnPROFIT_LOSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SERVICESColumn {
                get {
                    return this.columnSERVICES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IS_DP_BILLColumn {
                get {
                    return this.columnIS_DP_BILL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DELIVERYRow this[int index] {
                get {
                    return ((SHARE_TRACKER_PROCEDURE_DELIVERYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEventHandler SHARE_TRACKER_PROCEDURE_DELIVERYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEventHandler SHARE_TRACKER_PROCEDURE_DELIVERYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEventHandler SHARE_TRACKER_PROCEDURE_DELIVERYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEventHandler SHARE_TRACKER_PROCEDURE_DELIVERYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSHARE_TRACKER_PROCEDURE_DELIVERYRow(SHARE_TRACKER_PROCEDURE_DELIVERYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DELIVERYRow AddSHARE_TRACKER_PROCEDURE_DELIVERYRow(string SHARES_NAME, decimal SHARE_AMT, string PROFIT_LOSS, string SERVICES, string IS_DP_BILL) {
                SHARE_TRACKER_PROCEDURE_DELIVERYRow rowSHARE_TRACKER_PROCEDURE_DELIVERYRow = ((SHARE_TRACKER_PROCEDURE_DELIVERYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SHARES_NAME,
                        SHARE_AMT,
                        PROFIT_LOSS,
                        SERVICES,
                        IS_DP_BILL};
                rowSHARE_TRACKER_PROCEDURE_DELIVERYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHARE_TRACKER_PROCEDURE_DELIVERYRow);
                return rowSHARE_TRACKER_PROCEDURE_DELIVERYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DELIVERYRow FindBySHARES_TRACKER_HEADER_ID(int SHARES_TRACKER_HEADER_ID) {
                return ((SHARE_TRACKER_PROCEDURE_DELIVERYRow)(this.Rows.Find(new object[] {
                            SHARES_TRACKER_HEADER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SHARE_TRACKER_PROCEDURE_DELIVERYDataTable cln = ((SHARE_TRACKER_PROCEDURE_DELIVERYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SHARE_TRACKER_PROCEDURE_DELIVERYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSHARES_TRACKER_HEADER_ID = base.Columns["SHARES_TRACKER_HEADER_ID"];
                this.columnSHARES_NAME = base.Columns["SHARES_NAME"];
                this.columnSHARE_AMT = base.Columns["SHARE_AMT"];
                this.columnPROFIT_LOSS = base.Columns["PROFIT_LOSS"];
                this.columnSERVICES = base.Columns["SERVICES"];
                this.columnIS_DP_BILL = base.Columns["IS_DP_BILL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSHARES_TRACKER_HEADER_ID = new global::System.Data.DataColumn("SHARES_TRACKER_HEADER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_TRACKER_HEADER_ID);
                this.columnSHARES_NAME = new global::System.Data.DataColumn("SHARES_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_NAME);
                this.columnSHARE_AMT = new global::System.Data.DataColumn("SHARE_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE_AMT);
                this.columnPROFIT_LOSS = new global::System.Data.DataColumn("PROFIT_LOSS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROFIT_LOSS);
                this.columnSERVICES = new global::System.Data.DataColumn("SERVICES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICES);
                this.columnIS_DP_BILL = new global::System.Data.DataColumn("IS_DP_BILL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DP_BILL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSHARES_TRACKER_HEADER_ID}, true));
                this.columnSHARES_TRACKER_HEADER_ID.AutoIncrement = true;
                this.columnSHARES_TRACKER_HEADER_ID.AutoIncrementSeed = -1;
                this.columnSHARES_TRACKER_HEADER_ID.AutoIncrementStep = -1;
                this.columnSHARES_TRACKER_HEADER_ID.AllowDBNull = false;
                this.columnSHARES_TRACKER_HEADER_ID.ReadOnly = true;
                this.columnSHARES_TRACKER_HEADER_ID.Unique = true;
                this.columnSHARES_NAME.AllowDBNull = false;
                this.columnSHARES_NAME.MaxLength = 500;
                this.columnSHARE_AMT.ReadOnly = true;
                this.columnPROFIT_LOSS.ReadOnly = true;
                this.columnPROFIT_LOSS.MaxLength = 6;
                this.columnSERVICES.ReadOnly = true;
                this.columnSERVICES.MaxLength = 1000;
                this.columnIS_DP_BILL.ReadOnly = true;
                this.columnIS_DP_BILL.MaxLength = 11;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DELIVERYRow NewSHARE_TRACKER_PROCEDURE_DELIVERYRow() {
                return ((SHARE_TRACKER_PROCEDURE_DELIVERYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SHARE_TRACKER_PROCEDURE_DELIVERYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SHARE_TRACKER_PROCEDURE_DELIVERYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHARE_TRACKER_PROCEDURE_DELIVERYRowChanged != null)) {
                    this.SHARE_TRACKER_PROCEDURE_DELIVERYRowChanged(this, new SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEvent(((SHARE_TRACKER_PROCEDURE_DELIVERYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHARE_TRACKER_PROCEDURE_DELIVERYRowChanging != null)) {
                    this.SHARE_TRACKER_PROCEDURE_DELIVERYRowChanging(this, new SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEvent(((SHARE_TRACKER_PROCEDURE_DELIVERYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHARE_TRACKER_PROCEDURE_DELIVERYRowDeleted != null)) {
                    this.SHARE_TRACKER_PROCEDURE_DELIVERYRowDeleted(this, new SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEvent(((SHARE_TRACKER_PROCEDURE_DELIVERYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHARE_TRACKER_PROCEDURE_DELIVERYRowDeleting != null)) {
                    this.SHARE_TRACKER_PROCEDURE_DELIVERYRowDeleting(this, new SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEvent(((SHARE_TRACKER_PROCEDURE_DELIVERYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSHARE_TRACKER_PROCEDURE_DELIVERYRow(SHARE_TRACKER_PROCEDURE_DELIVERYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Shares_TrackerDataset ds = new Shares_TrackerDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHARE_TRACKER_PROCEDURE_DELIVERYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHARE_TRACKER_PROCEDURE_OPTIONDataTable : global::System.Data.TypedTableBase<SHARE_TRACKER_PROCEDURE_OPTIONRow> {
            
            private global::System.Data.DataColumn columnSHARES_TRACKER_HEADER_ID;
            
            private global::System.Data.DataColumn columnSHARES_NAME;
            
            private global::System.Data.DataColumn columnSHARE_AMT;
            
            private global::System.Data.DataColumn columnPROFIT_LOSS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_OPTIONDataTable() {
                this.TableName = "SHARE_TRACKER_PROCEDURE_OPTION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_OPTIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SHARE_TRACKER_PROCEDURE_OPTIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_TRACKER_HEADER_IDColumn {
                get {
                    return this.columnSHARES_TRACKER_HEADER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_NAMEColumn {
                get {
                    return this.columnSHARES_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARE_AMTColumn {
                get {
                    return this.columnSHARE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROFIT_LOSSColumn {
                get {
                    return this.columnPROFIT_LOSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_OPTIONRow this[int index] {
                get {
                    return ((SHARE_TRACKER_PROCEDURE_OPTIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEventHandler SHARE_TRACKER_PROCEDURE_OPTIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEventHandler SHARE_TRACKER_PROCEDURE_OPTIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEventHandler SHARE_TRACKER_PROCEDURE_OPTIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEventHandler SHARE_TRACKER_PROCEDURE_OPTIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSHARE_TRACKER_PROCEDURE_OPTIONRow(SHARE_TRACKER_PROCEDURE_OPTIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_OPTIONRow AddSHARE_TRACKER_PROCEDURE_OPTIONRow(string SHARES_NAME, decimal SHARE_AMT, string PROFIT_LOSS) {
                SHARE_TRACKER_PROCEDURE_OPTIONRow rowSHARE_TRACKER_PROCEDURE_OPTIONRow = ((SHARE_TRACKER_PROCEDURE_OPTIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SHARES_NAME,
                        SHARE_AMT,
                        PROFIT_LOSS};
                rowSHARE_TRACKER_PROCEDURE_OPTIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHARE_TRACKER_PROCEDURE_OPTIONRow);
                return rowSHARE_TRACKER_PROCEDURE_OPTIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_OPTIONRow FindBySHARES_TRACKER_HEADER_ID(int SHARES_TRACKER_HEADER_ID) {
                return ((SHARE_TRACKER_PROCEDURE_OPTIONRow)(this.Rows.Find(new object[] {
                            SHARES_TRACKER_HEADER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SHARE_TRACKER_PROCEDURE_OPTIONDataTable cln = ((SHARE_TRACKER_PROCEDURE_OPTIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SHARE_TRACKER_PROCEDURE_OPTIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSHARES_TRACKER_HEADER_ID = base.Columns["SHARES_TRACKER_HEADER_ID"];
                this.columnSHARES_NAME = base.Columns["SHARES_NAME"];
                this.columnSHARE_AMT = base.Columns["SHARE_AMT"];
                this.columnPROFIT_LOSS = base.Columns["PROFIT_LOSS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSHARES_TRACKER_HEADER_ID = new global::System.Data.DataColumn("SHARES_TRACKER_HEADER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_TRACKER_HEADER_ID);
                this.columnSHARES_NAME = new global::System.Data.DataColumn("SHARES_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_NAME);
                this.columnSHARE_AMT = new global::System.Data.DataColumn("SHARE_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE_AMT);
                this.columnPROFIT_LOSS = new global::System.Data.DataColumn("PROFIT_LOSS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROFIT_LOSS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSHARES_TRACKER_HEADER_ID}, true));
                this.columnSHARES_TRACKER_HEADER_ID.AutoIncrement = true;
                this.columnSHARES_TRACKER_HEADER_ID.AutoIncrementSeed = -1;
                this.columnSHARES_TRACKER_HEADER_ID.AutoIncrementStep = -1;
                this.columnSHARES_TRACKER_HEADER_ID.AllowDBNull = false;
                this.columnSHARES_TRACKER_HEADER_ID.ReadOnly = true;
                this.columnSHARES_TRACKER_HEADER_ID.Unique = true;
                this.columnSHARES_NAME.AllowDBNull = false;
                this.columnSHARES_NAME.MaxLength = 500;
                this.columnSHARE_AMT.ReadOnly = true;
                this.columnPROFIT_LOSS.ReadOnly = true;
                this.columnPROFIT_LOSS.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_OPTIONRow NewSHARE_TRACKER_PROCEDURE_OPTIONRow() {
                return ((SHARE_TRACKER_PROCEDURE_OPTIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SHARE_TRACKER_PROCEDURE_OPTIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SHARE_TRACKER_PROCEDURE_OPTIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHARE_TRACKER_PROCEDURE_OPTIONRowChanged != null)) {
                    this.SHARE_TRACKER_PROCEDURE_OPTIONRowChanged(this, new SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEvent(((SHARE_TRACKER_PROCEDURE_OPTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHARE_TRACKER_PROCEDURE_OPTIONRowChanging != null)) {
                    this.SHARE_TRACKER_PROCEDURE_OPTIONRowChanging(this, new SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEvent(((SHARE_TRACKER_PROCEDURE_OPTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHARE_TRACKER_PROCEDURE_OPTIONRowDeleted != null)) {
                    this.SHARE_TRACKER_PROCEDURE_OPTIONRowDeleted(this, new SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEvent(((SHARE_TRACKER_PROCEDURE_OPTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHARE_TRACKER_PROCEDURE_OPTIONRowDeleting != null)) {
                    this.SHARE_TRACKER_PROCEDURE_OPTIONRowDeleting(this, new SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEvent(((SHARE_TRACKER_PROCEDURE_OPTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSHARE_TRACKER_PROCEDURE_OPTIONRow(SHARE_TRACKER_PROCEDURE_OPTIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Shares_TrackerDataset ds = new Shares_TrackerDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHARE_TRACKER_PROCEDURE_OPTIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHARE_DETAIL_PROCEDUREDataTable : global::System.Data.TypedTableBase<SHARE_DETAIL_PROCEDURERow> {
            
            private global::System.Data.DataColumn columnRECORD_TYPE;
            
            private global::System.Data.DataColumn columnTRADING_DATE;
            
            private global::System.Data.DataColumn columnSHARES_AMT;
            
            private global::System.Data.DataColumn columnSHARES_QTY;
            
            private global::System.Data.DataColumn columnSHARES_CHARGES;
            
            private global::System.Data.DataColumn columnTOTAL;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnAVG_TOTAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_DETAIL_PROCEDUREDataTable() {
                this.TableName = "SHARE_DETAIL_PROCEDURE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_DETAIL_PROCEDUREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SHARE_DETAIL_PROCEDUREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECORD_TYPEColumn {
                get {
                    return this.columnRECORD_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TRADING_DATEColumn {
                get {
                    return this.columnTRADING_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_AMTColumn {
                get {
                    return this.columnSHARES_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_QTYColumn {
                get {
                    return this.columnSHARES_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_CHARGESColumn {
                get {
                    return this.columnSHARES_CHARGES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTALColumn {
                get {
                    return this.columnTOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AVG_TOTALColumn {
                get {
                    return this.columnAVG_TOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_DETAIL_PROCEDURERow this[int index] {
                get {
                    return ((SHARE_DETAIL_PROCEDURERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_DETAIL_PROCEDURERowChangeEventHandler SHARE_DETAIL_PROCEDURERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_DETAIL_PROCEDURERowChangeEventHandler SHARE_DETAIL_PROCEDURERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_DETAIL_PROCEDURERowChangeEventHandler SHARE_DETAIL_PROCEDURERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_DETAIL_PROCEDURERowChangeEventHandler SHARE_DETAIL_PROCEDURERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSHARE_DETAIL_PROCEDURERow(SHARE_DETAIL_PROCEDURERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_DETAIL_PROCEDURERow AddSHARE_DETAIL_PROCEDURERow(string RECORD_TYPE, System.DateTime TRADING_DATE, decimal SHARES_AMT, int SHARES_QTY, decimal SHARES_CHARGES, decimal TOTAL, int ID, decimal AVG_TOTAL) {
                SHARE_DETAIL_PROCEDURERow rowSHARE_DETAIL_PROCEDURERow = ((SHARE_DETAIL_PROCEDURERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RECORD_TYPE,
                        TRADING_DATE,
                        SHARES_AMT,
                        SHARES_QTY,
                        SHARES_CHARGES,
                        TOTAL,
                        ID,
                        AVG_TOTAL};
                rowSHARE_DETAIL_PROCEDURERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHARE_DETAIL_PROCEDURERow);
                return rowSHARE_DETAIL_PROCEDURERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SHARE_DETAIL_PROCEDUREDataTable cln = ((SHARE_DETAIL_PROCEDUREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SHARE_DETAIL_PROCEDUREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnRECORD_TYPE = base.Columns["RECORD_TYPE"];
                this.columnTRADING_DATE = base.Columns["TRADING_DATE"];
                this.columnSHARES_AMT = base.Columns["SHARES_AMT"];
                this.columnSHARES_QTY = base.Columns["SHARES_QTY"];
                this.columnSHARES_CHARGES = base.Columns["SHARES_CHARGES"];
                this.columnTOTAL = base.Columns["TOTAL"];
                this.columnID = base.Columns["ID"];
                this.columnAVG_TOTAL = base.Columns["AVG_TOTAL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnRECORD_TYPE = new global::System.Data.DataColumn("RECORD_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECORD_TYPE);
                this.columnTRADING_DATE = new global::System.Data.DataColumn("TRADING_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADING_DATE);
                this.columnSHARES_AMT = new global::System.Data.DataColumn("SHARES_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_AMT);
                this.columnSHARES_QTY = new global::System.Data.DataColumn("SHARES_QTY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_QTY);
                this.columnSHARES_CHARGES = new global::System.Data.DataColumn("SHARES_CHARGES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_CHARGES);
                this.columnTOTAL = new global::System.Data.DataColumn("TOTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnAVG_TOTAL = new global::System.Data.DataColumn("AVG_TOTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVG_TOTAL);
                this.columnRECORD_TYPE.ReadOnly = true;
                this.columnRECORD_TYPE.MaxLength = 4;
                this.columnTRADING_DATE.ReadOnly = true;
                this.columnSHARES_AMT.ReadOnly = true;
                this.columnSHARES_QTY.ReadOnly = true;
                this.columnSHARES_CHARGES.ReadOnly = true;
                this.columnTOTAL.ReadOnly = true;
                this.columnID.ReadOnly = true;
                this.columnAVG_TOTAL.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_DETAIL_PROCEDURERow NewSHARE_DETAIL_PROCEDURERow() {
                return ((SHARE_DETAIL_PROCEDURERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SHARE_DETAIL_PROCEDURERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SHARE_DETAIL_PROCEDURERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHARE_DETAIL_PROCEDURERowChanged != null)) {
                    this.SHARE_DETAIL_PROCEDURERowChanged(this, new SHARE_DETAIL_PROCEDURERowChangeEvent(((SHARE_DETAIL_PROCEDURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHARE_DETAIL_PROCEDURERowChanging != null)) {
                    this.SHARE_DETAIL_PROCEDURERowChanging(this, new SHARE_DETAIL_PROCEDURERowChangeEvent(((SHARE_DETAIL_PROCEDURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHARE_DETAIL_PROCEDURERowDeleted != null)) {
                    this.SHARE_DETAIL_PROCEDURERowDeleted(this, new SHARE_DETAIL_PROCEDURERowChangeEvent(((SHARE_DETAIL_PROCEDURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHARE_DETAIL_PROCEDURERowDeleting != null)) {
                    this.SHARE_DETAIL_PROCEDURERowDeleting(this, new SHARE_DETAIL_PROCEDURERowChangeEvent(((SHARE_DETAIL_PROCEDURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSHARE_DETAIL_PROCEDURERow(SHARE_DETAIL_PROCEDURERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Shares_TrackerDataset ds = new Shares_TrackerDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHARE_DETAIL_PROCEDUREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable : global::System.Data.TypedTableBase<SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow> {
            
            private global::System.Data.DataColumn columnSHARES_TRANSACTION_ID;
            
            private global::System.Data.DataColumn columnSHARES_TRANSACTION_CODE_ID;
            
            private global::System.Data.DataColumn columnSHARES_TRANSACTION_CODE_VALUE;
            
            private global::System.Data.DataColumn columnSHARES_TRANSACTION_AMT;
            
            private global::System.Data.DataColumn columnSHARES_TRANSACTION_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable() {
                this.TableName = "SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_TRANSACTION_IDColumn {
                get {
                    return this.columnSHARES_TRANSACTION_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_TRANSACTION_CODE_IDColumn {
                get {
                    return this.columnSHARES_TRANSACTION_CODE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_TRANSACTION_CODE_VALUEColumn {
                get {
                    return this.columnSHARES_TRANSACTION_CODE_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_TRANSACTION_AMTColumn {
                get {
                    return this.columnSHARES_TRANSACTION_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_TRANSACTION_DATEColumn {
                get {
                    return this.columnSHARES_TRANSACTION_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow this[int index] {
                get {
                    return ((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEventHandler SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEventHandler SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEventHandler SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEventHandler SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow(SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow AddSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow(int SHARES_TRANSACTION_CODE_ID, string SHARES_TRANSACTION_CODE_VALUE, decimal SHARES_TRANSACTION_AMT, System.DateTime SHARES_TRANSACTION_DATE) {
                SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow rowSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow = ((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SHARES_TRANSACTION_CODE_ID,
                        SHARES_TRANSACTION_CODE_VALUE,
                        SHARES_TRANSACTION_AMT,
                        SHARES_TRANSACTION_DATE};
                rowSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow);
                return rowSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow FindBySHARES_TRANSACTION_ID(int SHARES_TRANSACTION_ID) {
                return ((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow)(this.Rows.Find(new object[] {
                            SHARES_TRANSACTION_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable cln = ((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSHARES_TRANSACTION_ID = base.Columns["SHARES_TRANSACTION_ID"];
                this.columnSHARES_TRANSACTION_CODE_ID = base.Columns["SHARES_TRANSACTION_CODE_ID"];
                this.columnSHARES_TRANSACTION_CODE_VALUE = base.Columns["SHARES_TRANSACTION_CODE_VALUE"];
                this.columnSHARES_TRANSACTION_AMT = base.Columns["SHARES_TRANSACTION_AMT"];
                this.columnSHARES_TRANSACTION_DATE = base.Columns["SHARES_TRANSACTION_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSHARES_TRANSACTION_ID = new global::System.Data.DataColumn("SHARES_TRANSACTION_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_TRANSACTION_ID);
                this.columnSHARES_TRANSACTION_CODE_ID = new global::System.Data.DataColumn("SHARES_TRANSACTION_CODE_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_TRANSACTION_CODE_ID);
                this.columnSHARES_TRANSACTION_CODE_VALUE = new global::System.Data.DataColumn("SHARES_TRANSACTION_CODE_VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_TRANSACTION_CODE_VALUE);
                this.columnSHARES_TRANSACTION_AMT = new global::System.Data.DataColumn("SHARES_TRANSACTION_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_TRANSACTION_AMT);
                this.columnSHARES_TRANSACTION_DATE = new global::System.Data.DataColumn("SHARES_TRANSACTION_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_TRANSACTION_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSHARES_TRANSACTION_ID}, true));
                this.columnSHARES_TRANSACTION_ID.AutoIncrement = true;
                this.columnSHARES_TRANSACTION_ID.AutoIncrementSeed = -1;
                this.columnSHARES_TRANSACTION_ID.AutoIncrementStep = -1;
                this.columnSHARES_TRANSACTION_ID.AllowDBNull = false;
                this.columnSHARES_TRANSACTION_ID.ReadOnly = true;
                this.columnSHARES_TRANSACTION_ID.Unique = true;
                this.columnSHARES_TRANSACTION_CODE_ID.AllowDBNull = false;
                this.columnSHARES_TRANSACTION_CODE_VALUE.AllowDBNull = false;
                this.columnSHARES_TRANSACTION_CODE_VALUE.MaxLength = 200;
                this.columnSHARES_TRANSACTION_DATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow NewSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow() {
                return ((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChanged != null)) {
                    this.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChanged(this, new SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEvent(((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChanging != null)) {
                    this.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChanging(this, new SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEvent(((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowDeleted != null)) {
                    this.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowDeleted(this, new SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEvent(((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowDeleting != null)) {
                    this.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowDeleting(this, new SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEvent(((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow(SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Shares_TrackerDataset ds = new Shares_TrackerDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable : global::System.Data.TypedTableBase<SHARE_TRACKER_PROCEDURE_DIVIDENDRow> {
            
            private global::System.Data.DataColumn columnSHARE_DIVIDEND_ID;
            
            private global::System.Data.DataColumn columnSHARES_PRICE_AMT;
            
            private global::System.Data.DataColumn columnDIVIDEND_DATE;
            
            private global::System.Data.DataColumn columnSHARE_NAME;
            
            private global::System.Data.DataColumn columnIS_BANK_ACCOUNT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable() {
                this.TableName = "SHARE_TRACKER_PROCEDURE_DIVIDEND";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARE_DIVIDEND_IDColumn {
                get {
                    return this.columnSHARE_DIVIDEND_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_PRICE_AMTColumn {
                get {
                    return this.columnSHARES_PRICE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DIVIDEND_DATEColumn {
                get {
                    return this.columnDIVIDEND_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARE_NAMEColumn {
                get {
                    return this.columnSHARE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IS_BANK_ACCOUNTColumn {
                get {
                    return this.columnIS_BANK_ACCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DIVIDENDRow this[int index] {
                get {
                    return ((SHARE_TRACKER_PROCEDURE_DIVIDENDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEventHandler SHARE_TRACKER_PROCEDURE_DIVIDENDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEventHandler SHARE_TRACKER_PROCEDURE_DIVIDENDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEventHandler SHARE_TRACKER_PROCEDURE_DIVIDENDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEventHandler SHARE_TRACKER_PROCEDURE_DIVIDENDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSHARE_TRACKER_PROCEDURE_DIVIDENDRow(SHARE_TRACKER_PROCEDURE_DIVIDENDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DIVIDENDRow AddSHARE_TRACKER_PROCEDURE_DIVIDENDRow(decimal SHARES_PRICE_AMT, System.DateTime DIVIDEND_DATE, string SHARE_NAME, bool IS_BANK_ACCOUNT) {
                SHARE_TRACKER_PROCEDURE_DIVIDENDRow rowSHARE_TRACKER_PROCEDURE_DIVIDENDRow = ((SHARE_TRACKER_PROCEDURE_DIVIDENDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SHARES_PRICE_AMT,
                        DIVIDEND_DATE,
                        SHARE_NAME,
                        IS_BANK_ACCOUNT};
                rowSHARE_TRACKER_PROCEDURE_DIVIDENDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHARE_TRACKER_PROCEDURE_DIVIDENDRow);
                return rowSHARE_TRACKER_PROCEDURE_DIVIDENDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DIVIDENDRow FindBySHARE_DIVIDEND_ID(int SHARE_DIVIDEND_ID) {
                return ((SHARE_TRACKER_PROCEDURE_DIVIDENDRow)(this.Rows.Find(new object[] {
                            SHARE_DIVIDEND_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable cln = ((SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSHARE_DIVIDEND_ID = base.Columns["SHARE_DIVIDEND_ID"];
                this.columnSHARES_PRICE_AMT = base.Columns["SHARES_PRICE_AMT"];
                this.columnDIVIDEND_DATE = base.Columns["DIVIDEND_DATE"];
                this.columnSHARE_NAME = base.Columns["SHARE_NAME"];
                this.columnIS_BANK_ACCOUNT = base.Columns["IS_BANK_ACCOUNT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSHARE_DIVIDEND_ID = new global::System.Data.DataColumn("SHARE_DIVIDEND_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE_DIVIDEND_ID);
                this.columnSHARES_PRICE_AMT = new global::System.Data.DataColumn("SHARES_PRICE_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_PRICE_AMT);
                this.columnDIVIDEND_DATE = new global::System.Data.DataColumn("DIVIDEND_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND_DATE);
                this.columnSHARE_NAME = new global::System.Data.DataColumn("SHARE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE_NAME);
                this.columnIS_BANK_ACCOUNT = new global::System.Data.DataColumn("IS_BANK_ACCOUNT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_BANK_ACCOUNT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSHARE_DIVIDEND_ID}, true));
                this.columnSHARE_DIVIDEND_ID.AutoIncrement = true;
                this.columnSHARE_DIVIDEND_ID.AutoIncrementSeed = -1;
                this.columnSHARE_DIVIDEND_ID.AutoIncrementStep = -1;
                this.columnSHARE_DIVIDEND_ID.AllowDBNull = false;
                this.columnSHARE_DIVIDEND_ID.ReadOnly = true;
                this.columnSHARE_DIVIDEND_ID.Unique = true;
                this.columnSHARES_PRICE_AMT.AllowDBNull = false;
                this.columnDIVIDEND_DATE.AllowDBNull = false;
                this.columnSHARE_NAME.ReadOnly = true;
                this.columnSHARE_NAME.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DIVIDENDRow NewSHARE_TRACKER_PROCEDURE_DIVIDENDRow() {
                return ((SHARE_TRACKER_PROCEDURE_DIVIDENDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SHARE_TRACKER_PROCEDURE_DIVIDENDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SHARE_TRACKER_PROCEDURE_DIVIDENDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHARE_TRACKER_PROCEDURE_DIVIDENDRowChanged != null)) {
                    this.SHARE_TRACKER_PROCEDURE_DIVIDENDRowChanged(this, new SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEvent(((SHARE_TRACKER_PROCEDURE_DIVIDENDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHARE_TRACKER_PROCEDURE_DIVIDENDRowChanging != null)) {
                    this.SHARE_TRACKER_PROCEDURE_DIVIDENDRowChanging(this, new SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEvent(((SHARE_TRACKER_PROCEDURE_DIVIDENDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHARE_TRACKER_PROCEDURE_DIVIDENDRowDeleted != null)) {
                    this.SHARE_TRACKER_PROCEDURE_DIVIDENDRowDeleted(this, new SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEvent(((SHARE_TRACKER_PROCEDURE_DIVIDENDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHARE_TRACKER_PROCEDURE_DIVIDENDRowDeleting != null)) {
                    this.SHARE_TRACKER_PROCEDURE_DIVIDENDRowDeleting(this, new SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEvent(((SHARE_TRACKER_PROCEDURE_DIVIDENDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSHARE_TRACKER_PROCEDURE_DIVIDENDRow(SHARE_TRACKER_PROCEDURE_DIVIDENDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Shares_TrackerDataset ds = new Shares_TrackerDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable : global::System.Data.TypedTableBase<SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow> {
            
            private global::System.Data.DataColumn columnEXTRA_INCOMING_OUTGOING_ID;
            
            private global::System.Data.DataColumn columnAMOUNT;
            
            private global::System.Data.DataColumn columnINCOMING_OUTGOING_DESCRIPTION;
            
            private global::System.Data.DataColumn columnINCOMING_OUTGOING_CODE_ID;
            
            private global::System.Data.DataColumn columnINCOMING_OUTGOING_CODE_VALUE;
            
            private global::System.Data.DataColumn columnINCOMING_OUTGOING_DATE;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable() {
                this.TableName = "SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXTRA_INCOMING_OUTGOING_IDColumn {
                get {
                    return this.columnEXTRA_INCOMING_OUTGOING_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMOUNTColumn {
                get {
                    return this.columnAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INCOMING_OUTGOING_DESCRIPTIONColumn {
                get {
                    return this.columnINCOMING_OUTGOING_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INCOMING_OUTGOING_CODE_IDColumn {
                get {
                    return this.columnINCOMING_OUTGOING_CODE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INCOMING_OUTGOING_CODE_VALUEColumn {
                get {
                    return this.columnINCOMING_OUTGOING_CODE_VALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INCOMING_OUTGOING_DATEColumn {
                get {
                    return this.columnINCOMING_OUTGOING_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow this[int index] {
                get {
                    return ((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEventHandler SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEventHandler SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEventHandler SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEventHandler SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow(SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow AddSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow(decimal AMOUNT, string INCOMING_OUTGOING_DESCRIPTION, int INCOMING_OUTGOING_CODE_ID, string INCOMING_OUTGOING_CODE_VALUE, System.DateTime INCOMING_OUTGOING_DATE, int USER_ID) {
                SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow rowSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow = ((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AMOUNT,
                        INCOMING_OUTGOING_DESCRIPTION,
                        INCOMING_OUTGOING_CODE_ID,
                        INCOMING_OUTGOING_CODE_VALUE,
                        INCOMING_OUTGOING_DATE,
                        USER_ID};
                rowSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow);
                return rowSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow FindByEXTRA_INCOMING_OUTGOING_ID(int EXTRA_INCOMING_OUTGOING_ID) {
                return ((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow)(this.Rows.Find(new object[] {
                            EXTRA_INCOMING_OUTGOING_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable cln = ((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEXTRA_INCOMING_OUTGOING_ID = base.Columns["EXTRA_INCOMING_OUTGOING_ID"];
                this.columnAMOUNT = base.Columns["AMOUNT"];
                this.columnINCOMING_OUTGOING_DESCRIPTION = base.Columns["INCOMING_OUTGOING_DESCRIPTION"];
                this.columnINCOMING_OUTGOING_CODE_ID = base.Columns["INCOMING_OUTGOING_CODE_ID"];
                this.columnINCOMING_OUTGOING_CODE_VALUE = base.Columns["INCOMING_OUTGOING_CODE_VALUE"];
                this.columnINCOMING_OUTGOING_DATE = base.Columns["INCOMING_OUTGOING_DATE"];
                this.columnUSER_ID = base.Columns["USER_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEXTRA_INCOMING_OUTGOING_ID = new global::System.Data.DataColumn("EXTRA_INCOMING_OUTGOING_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTRA_INCOMING_OUTGOING_ID);
                this.columnAMOUNT = new global::System.Data.DataColumn("AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT);
                this.columnINCOMING_OUTGOING_DESCRIPTION = new global::System.Data.DataColumn("INCOMING_OUTGOING_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCOMING_OUTGOING_DESCRIPTION);
                this.columnINCOMING_OUTGOING_CODE_ID = new global::System.Data.DataColumn("INCOMING_OUTGOING_CODE_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCOMING_OUTGOING_CODE_ID);
                this.columnINCOMING_OUTGOING_CODE_VALUE = new global::System.Data.DataColumn("INCOMING_OUTGOING_CODE_VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCOMING_OUTGOING_CODE_VALUE);
                this.columnINCOMING_OUTGOING_DATE = new global::System.Data.DataColumn("INCOMING_OUTGOING_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCOMING_OUTGOING_DATE);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEXTRA_INCOMING_OUTGOING_ID}, true));
                this.columnEXTRA_INCOMING_OUTGOING_ID.AutoIncrement = true;
                this.columnEXTRA_INCOMING_OUTGOING_ID.AutoIncrementSeed = -1;
                this.columnEXTRA_INCOMING_OUTGOING_ID.AutoIncrementStep = -1;
                this.columnEXTRA_INCOMING_OUTGOING_ID.AllowDBNull = false;
                this.columnEXTRA_INCOMING_OUTGOING_ID.ReadOnly = true;
                this.columnEXTRA_INCOMING_OUTGOING_ID.Unique = true;
                this.columnAMOUNT.AllowDBNull = false;
                this.columnINCOMING_OUTGOING_DESCRIPTION.MaxLength = 1000;
                this.columnINCOMING_OUTGOING_CODE_ID.AllowDBNull = false;
                this.columnINCOMING_OUTGOING_CODE_VALUE.AllowDBNull = false;
                this.columnINCOMING_OUTGOING_CODE_VALUE.MaxLength = 100;
                this.columnINCOMING_OUTGOING_DATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow NewSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow() {
                return ((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChanged != null)) {
                    this.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChanged(this, new SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEvent(((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChanging != null)) {
                    this.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChanging(this, new SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEvent(((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowDeleted != null)) {
                    this.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowDeleted(this, new SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEvent(((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowDeleting != null)) {
                    this.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowDeleting(this, new SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEvent(((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow(SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Shares_TrackerDataset ds = new Shares_TrackerDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable : global::System.Data.TypedTableBase<SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow> {
            
            private global::System.Data.DataColumn columnSHARES_EXTRA_CHARGES_DESCRIPTION;
            
            private global::System.Data.DataColumn columnSHARES_EXTRA_CHARGES_AMT;
            
            private global::System.Data.DataColumn columnSHARES_CHARGES_DATE;
            
            private global::System.Data.DataColumn columnSHARES_NAME;
            
            private global::System.Data.DataColumn columnSHARES_TRACKER_HEADER_ID;
            
            private global::System.Data.DataColumn columnIS_CONSIDER;
            
            private global::System.Data.DataColumn columnSHARES_TRACKER_EXTRA_CHARGES_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable() {
                this.TableName = "SHARE_TRACKER_PROCEDURE_EXTRA_CHARGES";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_EXTRA_CHARGES_DESCRIPTIONColumn {
                get {
                    return this.columnSHARES_EXTRA_CHARGES_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_EXTRA_CHARGES_AMTColumn {
                get {
                    return this.columnSHARES_EXTRA_CHARGES_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_CHARGES_DATEColumn {
                get {
                    return this.columnSHARES_CHARGES_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_NAMEColumn {
                get {
                    return this.columnSHARES_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_TRACKER_HEADER_IDColumn {
                get {
                    return this.columnSHARES_TRACKER_HEADER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IS_CONSIDERColumn {
                get {
                    return this.columnIS_CONSIDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_TRACKER_EXTRA_CHARGES_IDColumn {
                get {
                    return this.columnSHARES_TRACKER_EXTRA_CHARGES_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow this[int index] {
                get {
                    return ((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEventHandler SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEventHandler SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEventHandler SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEventHandler SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow(SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow AddSHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow(string SHARES_EXTRA_CHARGES_DESCRIPTION, decimal SHARES_EXTRA_CHARGES_AMT, System.DateTime SHARES_CHARGES_DATE, string SHARES_NAME, int SHARES_TRACKER_HEADER_ID, bool IS_CONSIDER) {
                SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow rowSHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow = ((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SHARES_EXTRA_CHARGES_DESCRIPTION,
                        SHARES_EXTRA_CHARGES_AMT,
                        SHARES_CHARGES_DATE,
                        SHARES_NAME,
                        SHARES_TRACKER_HEADER_ID,
                        IS_CONSIDER,
                        null};
                rowSHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow);
                return rowSHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow FindBySHARES_TRACKER_EXTRA_CHARGES_ID(int SHARES_TRACKER_EXTRA_CHARGES_ID) {
                return ((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow)(this.Rows.Find(new object[] {
                            SHARES_TRACKER_EXTRA_CHARGES_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable cln = ((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSHARES_EXTRA_CHARGES_DESCRIPTION = base.Columns["SHARES_EXTRA_CHARGES_DESCRIPTION"];
                this.columnSHARES_EXTRA_CHARGES_AMT = base.Columns["SHARES_EXTRA_CHARGES_AMT"];
                this.columnSHARES_CHARGES_DATE = base.Columns["SHARES_CHARGES_DATE"];
                this.columnSHARES_NAME = base.Columns["SHARES_NAME"];
                this.columnSHARES_TRACKER_HEADER_ID = base.Columns["SHARES_TRACKER_HEADER_ID"];
                this.columnIS_CONSIDER = base.Columns["IS_CONSIDER"];
                this.columnSHARES_TRACKER_EXTRA_CHARGES_ID = base.Columns["SHARES_TRACKER_EXTRA_CHARGES_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSHARES_EXTRA_CHARGES_DESCRIPTION = new global::System.Data.DataColumn("SHARES_EXTRA_CHARGES_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_EXTRA_CHARGES_DESCRIPTION);
                this.columnSHARES_EXTRA_CHARGES_AMT = new global::System.Data.DataColumn("SHARES_EXTRA_CHARGES_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_EXTRA_CHARGES_AMT);
                this.columnSHARES_CHARGES_DATE = new global::System.Data.DataColumn("SHARES_CHARGES_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_CHARGES_DATE);
                this.columnSHARES_NAME = new global::System.Data.DataColumn("SHARES_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_NAME);
                this.columnSHARES_TRACKER_HEADER_ID = new global::System.Data.DataColumn("SHARES_TRACKER_HEADER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_TRACKER_HEADER_ID);
                this.columnIS_CONSIDER = new global::System.Data.DataColumn("IS_CONSIDER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_CONSIDER);
                this.columnSHARES_TRACKER_EXTRA_CHARGES_ID = new global::System.Data.DataColumn("SHARES_TRACKER_EXTRA_CHARGES_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_TRACKER_EXTRA_CHARGES_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSHARES_TRACKER_EXTRA_CHARGES_ID}, true));
                this.columnSHARES_EXTRA_CHARGES_DESCRIPTION.AllowDBNull = false;
                this.columnSHARES_EXTRA_CHARGES_DESCRIPTION.MaxLength = 500;
                this.columnSHARES_NAME.MaxLength = 500;
                this.columnSHARES_TRACKER_EXTRA_CHARGES_ID.AutoIncrement = true;
                this.columnSHARES_TRACKER_EXTRA_CHARGES_ID.AutoIncrementSeed = -1;
                this.columnSHARES_TRACKER_EXTRA_CHARGES_ID.AutoIncrementStep = -1;
                this.columnSHARES_TRACKER_EXTRA_CHARGES_ID.AllowDBNull = false;
                this.columnSHARES_TRACKER_EXTRA_CHARGES_ID.ReadOnly = true;
                this.columnSHARES_TRACKER_EXTRA_CHARGES_ID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow NewSHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow() {
                return ((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChanged != null)) {
                    this.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChanged(this, new SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEvent(((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChanging != null)) {
                    this.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChanging(this, new SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEvent(((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowDeleted != null)) {
                    this.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowDeleted(this, new SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEvent(((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowDeleting != null)) {
                    this.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowDeleting(this, new SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEvent(((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow(SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Shares_TrackerDataset ds = new Shares_TrackerDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CURRENT_SHARE_PROCEDUREDataTable : global::System.Data.TypedTableBase<CURRENT_SHARE_PROCEDURERow> {
            
            private global::System.Data.DataColumn columnSHARES_TRACKER_HEADER_ID;
            
            private global::System.Data.DataColumn columnSHARES_NAME;
            
            private global::System.Data.DataColumn columnSHARE_AMT;
            
            private global::System.Data.DataColumn columnPROFIT_LOSS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CURRENT_SHARE_PROCEDUREDataTable() {
                this.TableName = "CURRENT_SHARE_PROCEDURE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CURRENT_SHARE_PROCEDUREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CURRENT_SHARE_PROCEDUREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_TRACKER_HEADER_IDColumn {
                get {
                    return this.columnSHARES_TRACKER_HEADER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_NAMEColumn {
                get {
                    return this.columnSHARES_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARE_AMTColumn {
                get {
                    return this.columnSHARE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROFIT_LOSSColumn {
                get {
                    return this.columnPROFIT_LOSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CURRENT_SHARE_PROCEDURERow this[int index] {
                get {
                    return ((CURRENT_SHARE_PROCEDURERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CURRENT_SHARE_PROCEDURERowChangeEventHandler CURRENT_SHARE_PROCEDURERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CURRENT_SHARE_PROCEDURERowChangeEventHandler CURRENT_SHARE_PROCEDURERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CURRENT_SHARE_PROCEDURERowChangeEventHandler CURRENT_SHARE_PROCEDURERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CURRENT_SHARE_PROCEDURERowChangeEventHandler CURRENT_SHARE_PROCEDURERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCURRENT_SHARE_PROCEDURERow(CURRENT_SHARE_PROCEDURERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CURRENT_SHARE_PROCEDURERow AddCURRENT_SHARE_PROCEDURERow(string SHARES_NAME, decimal SHARE_AMT, string PROFIT_LOSS) {
                CURRENT_SHARE_PROCEDURERow rowCURRENT_SHARE_PROCEDURERow = ((CURRENT_SHARE_PROCEDURERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SHARES_NAME,
                        SHARE_AMT,
                        PROFIT_LOSS};
                rowCURRENT_SHARE_PROCEDURERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCURRENT_SHARE_PROCEDURERow);
                return rowCURRENT_SHARE_PROCEDURERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CURRENT_SHARE_PROCEDURERow FindBySHARES_TRACKER_HEADER_ID(int SHARES_TRACKER_HEADER_ID) {
                return ((CURRENT_SHARE_PROCEDURERow)(this.Rows.Find(new object[] {
                            SHARES_TRACKER_HEADER_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CURRENT_SHARE_PROCEDUREDataTable cln = ((CURRENT_SHARE_PROCEDUREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CURRENT_SHARE_PROCEDUREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSHARES_TRACKER_HEADER_ID = base.Columns["SHARES_TRACKER_HEADER_ID"];
                this.columnSHARES_NAME = base.Columns["SHARES_NAME"];
                this.columnSHARE_AMT = base.Columns["SHARE_AMT"];
                this.columnPROFIT_LOSS = base.Columns["PROFIT_LOSS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSHARES_TRACKER_HEADER_ID = new global::System.Data.DataColumn("SHARES_TRACKER_HEADER_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_TRACKER_HEADER_ID);
                this.columnSHARES_NAME = new global::System.Data.DataColumn("SHARES_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_NAME);
                this.columnSHARE_AMT = new global::System.Data.DataColumn("SHARE_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARE_AMT);
                this.columnPROFIT_LOSS = new global::System.Data.DataColumn("PROFIT_LOSS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROFIT_LOSS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSHARES_TRACKER_HEADER_ID}, true));
                this.columnSHARES_TRACKER_HEADER_ID.AutoIncrement = true;
                this.columnSHARES_TRACKER_HEADER_ID.AutoIncrementSeed = -1;
                this.columnSHARES_TRACKER_HEADER_ID.AutoIncrementStep = -1;
                this.columnSHARES_TRACKER_HEADER_ID.AllowDBNull = false;
                this.columnSHARES_TRACKER_HEADER_ID.ReadOnly = true;
                this.columnSHARES_TRACKER_HEADER_ID.Unique = true;
                this.columnSHARES_NAME.AllowDBNull = false;
                this.columnSHARES_NAME.MaxLength = 500;
                this.columnSHARE_AMT.ReadOnly = true;
                this.columnPROFIT_LOSS.ReadOnly = true;
                this.columnPROFIT_LOSS.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CURRENT_SHARE_PROCEDURERow NewCURRENT_SHARE_PROCEDURERow() {
                return ((CURRENT_SHARE_PROCEDURERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CURRENT_SHARE_PROCEDURERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CURRENT_SHARE_PROCEDURERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CURRENT_SHARE_PROCEDURERowChanged != null)) {
                    this.CURRENT_SHARE_PROCEDURERowChanged(this, new CURRENT_SHARE_PROCEDURERowChangeEvent(((CURRENT_SHARE_PROCEDURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CURRENT_SHARE_PROCEDURERowChanging != null)) {
                    this.CURRENT_SHARE_PROCEDURERowChanging(this, new CURRENT_SHARE_PROCEDURERowChangeEvent(((CURRENT_SHARE_PROCEDURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CURRENT_SHARE_PROCEDURERowDeleted != null)) {
                    this.CURRENT_SHARE_PROCEDURERowDeleted(this, new CURRENT_SHARE_PROCEDURERowChangeEvent(((CURRENT_SHARE_PROCEDURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CURRENT_SHARE_PROCEDURERowDeleting != null)) {
                    this.CURRENT_SHARE_PROCEDURERowDeleting(this, new CURRENT_SHARE_PROCEDURERowChangeEvent(((CURRENT_SHARE_PROCEDURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCURRENT_SHARE_PROCEDURERow(CURRENT_SHARE_PROCEDURERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Shares_TrackerDataset ds = new Shares_TrackerDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CURRENT_SHARE_PROCEDUREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHARE_WISE_PROFITDataTable : global::System.Data.TypedTableBase<SHARE_WISE_PROFITRow> {
            
            private global::System.Data.DataColumn columnSHARES_NAME;
            
            private global::System.Data.DataColumn columnAMT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_WISE_PROFITDataTable() {
                this.TableName = "SHARE_WISE_PROFIT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_WISE_PROFITDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SHARE_WISE_PROFITDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SHARES_NAMEColumn {
                get {
                    return this.columnSHARES_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_WISE_PROFITRow this[int index] {
                get {
                    return ((SHARE_WISE_PROFITRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_WISE_PROFITRowChangeEventHandler SHARE_WISE_PROFITRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_WISE_PROFITRowChangeEventHandler SHARE_WISE_PROFITRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_WISE_PROFITRowChangeEventHandler SHARE_WISE_PROFITRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SHARE_WISE_PROFITRowChangeEventHandler SHARE_WISE_PROFITRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSHARE_WISE_PROFITRow(SHARE_WISE_PROFITRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_WISE_PROFITRow AddSHARE_WISE_PROFITRow(string SHARES_NAME, decimal AMT) {
                SHARE_WISE_PROFITRow rowSHARE_WISE_PROFITRow = ((SHARE_WISE_PROFITRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SHARES_NAME,
                        AMT};
                rowSHARE_WISE_PROFITRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHARE_WISE_PROFITRow);
                return rowSHARE_WISE_PROFITRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SHARE_WISE_PROFITDataTable cln = ((SHARE_WISE_PROFITDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SHARE_WISE_PROFITDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSHARES_NAME = base.Columns["SHARES_NAME"];
                this.columnAMT = base.Columns["AMT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSHARES_NAME = new global::System.Data.DataColumn("SHARES_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHARES_NAME);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnSHARES_NAME.AllowDBNull = false;
                this.columnSHARES_NAME.MaxLength = 500;
                this.columnAMT.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_WISE_PROFITRow NewSHARE_WISE_PROFITRow() {
                return ((SHARE_WISE_PROFITRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SHARE_WISE_PROFITRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SHARE_WISE_PROFITRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHARE_WISE_PROFITRowChanged != null)) {
                    this.SHARE_WISE_PROFITRowChanged(this, new SHARE_WISE_PROFITRowChangeEvent(((SHARE_WISE_PROFITRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHARE_WISE_PROFITRowChanging != null)) {
                    this.SHARE_WISE_PROFITRowChanging(this, new SHARE_WISE_PROFITRowChangeEvent(((SHARE_WISE_PROFITRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHARE_WISE_PROFITRowDeleted != null)) {
                    this.SHARE_WISE_PROFITRowDeleted(this, new SHARE_WISE_PROFITRowChangeEvent(((SHARE_WISE_PROFITRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHARE_WISE_PROFITRowDeleting != null)) {
                    this.SHARE_WISE_PROFITRowDeleting(this, new SHARE_WISE_PROFITRowChangeEvent(((SHARE_WISE_PROFITRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSHARE_WISE_PROFITRow(SHARE_WISE_PROFITRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Shares_TrackerDataset ds = new Shares_TrackerDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHARE_WISE_PROFITDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SHARE_TRACKER_PROCEDURE_DELIVERYRow : global::System.Data.DataRow {
            
            private SHARE_TRACKER_PROCEDURE_DELIVERYDataTable tableSHARE_TRACKER_PROCEDURE_DELIVERY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_DELIVERYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHARE_TRACKER_PROCEDURE_DELIVERY = ((SHARE_TRACKER_PROCEDURE_DELIVERYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SHARES_TRACKER_HEADER_ID {
                get {
                    return ((int)(this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SHARES_TRACKER_HEADER_IDColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SHARES_TRACKER_HEADER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SHARES_NAME {
                get {
                    return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SHARES_NAMEColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SHARES_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SHARE_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SHARE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARE_AMT\' in table \'SHARE_TRACKER_PROCEDURE_DELIVERY\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SHARE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROFIT_LOSS {
                get {
                    try {
                        return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.PROFIT_LOSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROFIT_LOSS\' in table \'SHARE_TRACKER_PROCEDURE_DELIVERY\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.PROFIT_LOSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SERVICES {
                get {
                    try {
                        return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SERVICESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICES\' in table \'SHARE_TRACKER_PROCEDURE_DELIVERY\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SERVICESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IS_DP_BILL {
                get {
                    try {
                        return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.IS_DP_BILLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_DP_BILL\' in table \'SHARE_TRACKER_PROCEDURE_DELIVERY\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.IS_DP_BILLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARE_AMTNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SHARE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARE_AMTNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SHARE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPROFIT_LOSSNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.PROFIT_LOSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPROFIT_LOSSNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.PROFIT_LOSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSERVICESNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SERVICESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSERVICESNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.SERVICESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIS_DP_BILLNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.IS_DP_BILLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIS_DP_BILLNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_DELIVERY.IS_DP_BILLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SHARE_TRACKER_PROCEDURE_OPTIONRow : global::System.Data.DataRow {
            
            private SHARE_TRACKER_PROCEDURE_OPTIONDataTable tableSHARE_TRACKER_PROCEDURE_OPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_OPTIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHARE_TRACKER_PROCEDURE_OPTION = ((SHARE_TRACKER_PROCEDURE_OPTIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SHARES_TRACKER_HEADER_ID {
                get {
                    return ((int)(this[this.tableSHARE_TRACKER_PROCEDURE_OPTION.SHARES_TRACKER_HEADER_IDColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_OPTION.SHARES_TRACKER_HEADER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SHARES_NAME {
                get {
                    return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_OPTION.SHARES_NAMEColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_OPTION.SHARES_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SHARE_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableSHARE_TRACKER_PROCEDURE_OPTION.SHARE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARE_AMT\' in table \'SHARE_TRACKER_PROCEDURE_OPTION\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_OPTION.SHARE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROFIT_LOSS {
                get {
                    try {
                        return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_OPTION.PROFIT_LOSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROFIT_LOSS\' in table \'SHARE_TRACKER_PROCEDURE_OPTION\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_OPTION.PROFIT_LOSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARE_AMTNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_OPTION.SHARE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARE_AMTNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_OPTION.SHARE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPROFIT_LOSSNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_OPTION.PROFIT_LOSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPROFIT_LOSSNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_OPTION.PROFIT_LOSSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SHARE_DETAIL_PROCEDURERow : global::System.Data.DataRow {
            
            private SHARE_DETAIL_PROCEDUREDataTable tableSHARE_DETAIL_PROCEDURE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_DETAIL_PROCEDURERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHARE_DETAIL_PROCEDURE = ((SHARE_DETAIL_PROCEDUREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RECORD_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableSHARE_DETAIL_PROCEDURE.RECORD_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RECORD_TYPE\' in table \'SHARE_DETAIL_PROCEDURE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_DETAIL_PROCEDURE.RECORD_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime TRADING_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSHARE_DETAIL_PROCEDURE.TRADING_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRADING_DATE\' in table \'SHARE_DETAIL_PROCEDURE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_DETAIL_PROCEDURE.TRADING_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SHARES_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableSHARE_DETAIL_PROCEDURE.SHARES_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARES_AMT\' in table \'SHARE_DETAIL_PROCEDURE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_DETAIL_PROCEDURE.SHARES_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SHARES_QTY {
                get {
                    try {
                        return ((int)(this[this.tableSHARE_DETAIL_PROCEDURE.SHARES_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARES_QTY\' in table \'SHARE_DETAIL_PROCEDURE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_DETAIL_PROCEDURE.SHARES_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SHARES_CHARGES {
                get {
                    try {
                        return ((decimal)(this[this.tableSHARE_DETAIL_PROCEDURE.SHARES_CHARGESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARES_CHARGES\' in table \'SHARE_DETAIL_PROCEDURE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSHARE_DETAIL_PROCEDURE.SHARES_CHARGESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL {
                get {
                    try {
                        return ((decimal)(this[this.tableSHARE_DETAIL_PROCEDURE.TOTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL\' in table \'SHARE_DETAIL_PROCEDURE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_DETAIL_PROCEDURE.TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableSHARE_DETAIL_PROCEDURE.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'SHARE_DETAIL_PROCEDURE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_DETAIL_PROCEDURE.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AVG_TOTAL {
                get {
                    try {
                        return ((decimal)(this[this.tableSHARE_DETAIL_PROCEDURE.AVG_TOTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVG_TOTAL\' in table \'SHARE_DETAIL_PROCEDURE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_DETAIL_PROCEDURE.AVG_TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRECORD_TYPENull() {
                return this.IsNull(this.tableSHARE_DETAIL_PROCEDURE.RECORD_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRECORD_TYPENull() {
                this[this.tableSHARE_DETAIL_PROCEDURE.RECORD_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTRADING_DATENull() {
                return this.IsNull(this.tableSHARE_DETAIL_PROCEDURE.TRADING_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTRADING_DATENull() {
                this[this.tableSHARE_DETAIL_PROCEDURE.TRADING_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARES_AMTNull() {
                return this.IsNull(this.tableSHARE_DETAIL_PROCEDURE.SHARES_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARES_AMTNull() {
                this[this.tableSHARE_DETAIL_PROCEDURE.SHARES_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARES_QTYNull() {
                return this.IsNull(this.tableSHARE_DETAIL_PROCEDURE.SHARES_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARES_QTYNull() {
                this[this.tableSHARE_DETAIL_PROCEDURE.SHARES_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARES_CHARGESNull() {
                return this.IsNull(this.tableSHARE_DETAIL_PROCEDURE.SHARES_CHARGESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARES_CHARGESNull() {
                this[this.tableSHARE_DETAIL_PROCEDURE.SHARES_CHARGESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTOTALNull() {
                return this.IsNull(this.tableSHARE_DETAIL_PROCEDURE.TOTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTOTALNull() {
                this[this.tableSHARE_DETAIL_PROCEDURE.TOTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableSHARE_DETAIL_PROCEDURE.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIDNull() {
                this[this.tableSHARE_DETAIL_PROCEDURE.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAVG_TOTALNull() {
                return this.IsNull(this.tableSHARE_DETAIL_PROCEDURE.AVG_TOTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAVG_TOTALNull() {
                this[this.tableSHARE_DETAIL_PROCEDURE.AVG_TOTALColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow : global::System.Data.DataRow {
            
            private SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT = ((SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SHARES_TRANSACTION_ID {
                get {
                    return ((int)(this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_IDColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SHARES_TRANSACTION_CODE_ID {
                get {
                    return ((int)(this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_CODE_IDColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_CODE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SHARES_TRANSACTION_CODE_VALUE {
                get {
                    return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_CODE_VALUEColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_CODE_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SHARES_TRANSACTION_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARES_TRANSACTION_AMT\' in table \'SHARE_TRACKER_PROCEDURE_P" +
                                "AYIN_PAYOUT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SHARES_TRANSACTION_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_DATEColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARES_TRANSACTION_AMTNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARES_TRANSACTION_AMTNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT.SHARES_TRANSACTION_AMTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SHARE_TRACKER_PROCEDURE_DIVIDENDRow : global::System.Data.DataRow {
            
            private SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable tableSHARE_TRACKER_PROCEDURE_DIVIDEND;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_DIVIDENDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND = ((SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SHARE_DIVIDEND_ID {
                get {
                    return ((int)(this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.SHARE_DIVIDEND_IDColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.SHARE_DIVIDEND_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SHARES_PRICE_AMT {
                get {
                    return ((decimal)(this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.SHARES_PRICE_AMTColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.SHARES_PRICE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DIVIDEND_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.DIVIDEND_DATEColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.DIVIDEND_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SHARE_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.SHARE_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARE_NAME\' in table \'SHARE_TRACKER_PROCEDURE_DIVIDEND\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.SHARE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IS_BANK_ACCOUNT {
                get {
                    try {
                        return ((bool)(this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.IS_BANK_ACCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_BANK_ACCOUNT\' in table \'SHARE_TRACKER_PROCEDURE_DIVIDEND" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.IS_BANK_ACCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARE_NAMENull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.SHARE_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARE_NAMENull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.SHARE_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIS_BANK_ACCOUNTNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.IS_BANK_ACCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIS_BANK_ACCOUNTNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_DIVIDEND.IS_BANK_ACCOUNTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow : global::System.Data.DataRow {
            
            private SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING = ((SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int EXTRA_INCOMING_OUTGOING_ID {
                get {
                    return ((int)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.EXTRA_INCOMING_OUTGOING_IDColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.EXTRA_INCOMING_OUTGOING_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMOUNT {
                get {
                    return ((decimal)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.AMOUNTColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INCOMING_OUTGOING_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.INCOMING_OUTGOING_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INCOMING_OUTGOING_DESCRIPTION\' in table \'SHARE_TRACKER_PROC" +
                                "EDURE_EXTRA_INCOMING_OUTGOING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.INCOMING_OUTGOING_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int INCOMING_OUTGOING_CODE_ID {
                get {
                    return ((int)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.INCOMING_OUTGOING_CODE_IDColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.INCOMING_OUTGOING_CODE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INCOMING_OUTGOING_CODE_VALUE {
                get {
                    return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.INCOMING_OUTGOING_CODE_VALUEColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.INCOMING_OUTGOING_CODE_VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime INCOMING_OUTGOING_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.INCOMING_OUTGOING_DATEColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.INCOMING_OUTGOING_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int USER_ID {
                get {
                    try {
                        return ((int)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.USER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USER_ID\' in table \'SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_O" +
                                "UTGOING\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINCOMING_OUTGOING_DESCRIPTIONNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.INCOMING_OUTGOING_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINCOMING_OUTGOING_DESCRIPTIONNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.INCOMING_OUTGOING_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUSER_IDNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.USER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUSER_IDNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING.USER_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow : global::System.Data.DataRow {
            
            private SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES = ((SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SHARES_EXTRA_CHARGES_DESCRIPTION {
                get {
                    return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_EXTRA_CHARGES_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_EXTRA_CHARGES_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SHARES_EXTRA_CHARGES_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_EXTRA_CHARGES_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARES_EXTRA_CHARGES_AMT\' in table \'SHARE_TRACKER_PROCEDURE" +
                                "_EXTRA_CHARGES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_EXTRA_CHARGES_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime SHARES_CHARGES_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_CHARGES_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARES_CHARGES_DATE\' in table \'SHARE_TRACKER_PROCEDURE_EXTR" +
                                "A_CHARGES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_CHARGES_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SHARES_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARES_NAME\' in table \'SHARE_TRACKER_PROCEDURE_EXTRA_CHARGE" +
                                "S\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SHARES_TRACKER_HEADER_ID {
                get {
                    try {
                        return ((int)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_TRACKER_HEADER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARES_TRACKER_HEADER_ID\' in table \'SHARE_TRACKER_PROCEDURE" +
                                "_EXTRA_CHARGES\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_TRACKER_HEADER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IS_CONSIDER {
                get {
                    try {
                        return ((bool)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.IS_CONSIDERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IS_CONSIDER\' in table \'SHARE_TRACKER_PROCEDURE_EXTRA_CHARGE" +
                                "S\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.IS_CONSIDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SHARES_TRACKER_EXTRA_CHARGES_ID {
                get {
                    return ((int)(this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_TRACKER_EXTRA_CHARGES_IDColumn]));
                }
                set {
                    this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_TRACKER_EXTRA_CHARGES_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARES_EXTRA_CHARGES_AMTNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_EXTRA_CHARGES_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARES_EXTRA_CHARGES_AMTNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_EXTRA_CHARGES_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARES_CHARGES_DATENull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_CHARGES_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARES_CHARGES_DATENull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_CHARGES_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARES_NAMENull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARES_NAMENull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARES_TRACKER_HEADER_IDNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_TRACKER_HEADER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARES_TRACKER_HEADER_IDNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.SHARES_TRACKER_HEADER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIS_CONSIDERNull() {
                return this.IsNull(this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.IS_CONSIDERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIS_CONSIDERNull() {
                this[this.tableSHARE_TRACKER_PROCEDURE_EXTRA_CHARGES.IS_CONSIDERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CURRENT_SHARE_PROCEDURERow : global::System.Data.DataRow {
            
            private CURRENT_SHARE_PROCEDUREDataTable tableCURRENT_SHARE_PROCEDURE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CURRENT_SHARE_PROCEDURERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCURRENT_SHARE_PROCEDURE = ((CURRENT_SHARE_PROCEDUREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SHARES_TRACKER_HEADER_ID {
                get {
                    return ((int)(this[this.tableCURRENT_SHARE_PROCEDURE.SHARES_TRACKER_HEADER_IDColumn]));
                }
                set {
                    this[this.tableCURRENT_SHARE_PROCEDURE.SHARES_TRACKER_HEADER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SHARES_NAME {
                get {
                    return ((string)(this[this.tableCURRENT_SHARE_PROCEDURE.SHARES_NAMEColumn]));
                }
                set {
                    this[this.tableCURRENT_SHARE_PROCEDURE.SHARES_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SHARE_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableCURRENT_SHARE_PROCEDURE.SHARE_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHARE_AMT\' in table \'CURRENT_SHARE_PROCEDURE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCURRENT_SHARE_PROCEDURE.SHARE_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROFIT_LOSS {
                get {
                    try {
                        return ((string)(this[this.tableCURRENT_SHARE_PROCEDURE.PROFIT_LOSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROFIT_LOSS\' in table \'CURRENT_SHARE_PROCEDURE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCURRENT_SHARE_PROCEDURE.PROFIT_LOSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSHARE_AMTNull() {
                return this.IsNull(this.tableCURRENT_SHARE_PROCEDURE.SHARE_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSHARE_AMTNull() {
                this[this.tableCURRENT_SHARE_PROCEDURE.SHARE_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPROFIT_LOSSNull() {
                return this.IsNull(this.tableCURRENT_SHARE_PROCEDURE.PROFIT_LOSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPROFIT_LOSSNull() {
                this[this.tableCURRENT_SHARE_PROCEDURE.PROFIT_LOSSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SHARE_WISE_PROFITRow : global::System.Data.DataRow {
            
            private SHARE_WISE_PROFITDataTable tableSHARE_WISE_PROFIT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SHARE_WISE_PROFITRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHARE_WISE_PROFIT = ((SHARE_WISE_PROFITDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SHARES_NAME {
                get {
                    return ((string)(this[this.tableSHARE_WISE_PROFIT.SHARES_NAMEColumn]));
                }
                set {
                    this[this.tableSHARE_WISE_PROFIT.SHARES_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableSHARE_WISE_PROFIT.AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AMT\' in table \'SHARE_WISE_PROFIT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSHARE_WISE_PROFIT.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAMTNull() {
                return this.IsNull(this.tableSHARE_WISE_PROFIT.AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAMTNull() {
                this[this.tableSHARE_WISE_PROFIT.AMTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEvent : global::System.EventArgs {
            
            private SHARE_TRACKER_PROCEDURE_DELIVERYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DELIVERYRowChangeEvent(SHARE_TRACKER_PROCEDURE_DELIVERYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DELIVERYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEvent : global::System.EventArgs {
            
            private SHARE_TRACKER_PROCEDURE_OPTIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_OPTIONRowChangeEvent(SHARE_TRACKER_PROCEDURE_OPTIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_OPTIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SHARE_DETAIL_PROCEDURERowChangeEvent : global::System.EventArgs {
            
            private SHARE_DETAIL_PROCEDURERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_DETAIL_PROCEDURERowChangeEvent(SHARE_DETAIL_PROCEDURERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_DETAIL_PROCEDURERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEvent : global::System.EventArgs {
            
            private SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRowChangeEvent(SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEvent : global::System.EventArgs {
            
            private SHARE_TRACKER_PROCEDURE_DIVIDENDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DIVIDENDRowChangeEvent(SHARE_TRACKER_PROCEDURE_DIVIDENDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_DIVIDENDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEvent : global::System.EventArgs {
            
            private SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRowChangeEvent(SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEvent : global::System.EventArgs {
            
            private SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRowChangeEvent(SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CURRENT_SHARE_PROCEDURERowChangeEvent : global::System.EventArgs {
            
            private CURRENT_SHARE_PROCEDURERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CURRENT_SHARE_PROCEDURERowChangeEvent(CURRENT_SHARE_PROCEDURERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CURRENT_SHARE_PROCEDURERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SHARE_WISE_PROFITRowChangeEvent : global::System.EventArgs {
            
            private SHARE_WISE_PROFITRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_WISE_PROFITRowChangeEvent(SHARE_WISE_PROFITRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SHARE_WISE_PROFITRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ExpensesTracker.DataSet.Shares_TrackerDatasetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHARE_TRACKER_PROCEDURE_DELIVERYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SHARE_TRACKER_PROCEDURE_DELIVERYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHARE_TRACKER_PROCEDURE_DELIVERY";
            tableMapping.ColumnMappings.Add("SHARES_TRACKER_HEADER_ID", "SHARES_TRACKER_HEADER_ID");
            tableMapping.ColumnMappings.Add("SHARES_NAME", "SHARES_NAME");
            tableMapping.ColumnMappings.Add("SHARE_AMT", "SHARE_AMT");
            tableMapping.ColumnMappings.Add("PROFIT_LOSS", "PROFIT_LOSS");
            tableMapping.ColumnMappings.Add("SERVICES", "SERVICES");
            tableMapping.ColumnMappings.Add("IS_DP_BILL", "IS_DP_BILL");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExpensesTracker.Properties.Settings.Default.Expenses_TrackerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SHARE_TRACKER_PROCEDURE_DELIVERY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAT_ACCOUNT_VALUE", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_DELIVERYDataTable dataTable, global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_DELIVERYDataTable GetData(global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_DELIVERYDataTable dataTable = new Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_DELIVERYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHARE_TRACKER_PROCEDURE_OPTIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SHARE_TRACKER_PROCEDURE_OPTIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHARE_TRACKER_PROCEDURE_OPTION";
            tableMapping.ColumnMappings.Add("SHARES_TRACKER_HEADER_ID", "SHARES_TRACKER_HEADER_ID");
            tableMapping.ColumnMappings.Add("SHARES_NAME", "SHARES_NAME");
            tableMapping.ColumnMappings.Add("SHARE_AMT", "SHARE_AMT");
            tableMapping.ColumnMappings.Add("PROFIT_LOSS", "PROFIT_LOSS");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExpensesTracker.Properties.Settings.Default.Expenses_TrackerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SHARE_TRACKER_PROCEDURE_OPTION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAT_ACCOUNT_VALUE", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_OPTIONDataTable dataTable, global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_OPTIONDataTable GetData(global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_OPTIONDataTable dataTable = new Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_OPTIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHARE_DETAIL_PROCEDURETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SHARE_DETAIL_PROCEDURETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHARE_DETAIL_PROCEDURE";
            tableMapping.ColumnMappings.Add("RECORD_TYPE", "RECORD_TYPE");
            tableMapping.ColumnMappings.Add("TRADING_DATE", "TRADING_DATE");
            tableMapping.ColumnMappings.Add("SHARES_AMT", "SHARES_AMT");
            tableMapping.ColumnMappings.Add("SHARES_QTY", "SHARES_QTY");
            tableMapping.ColumnMappings.Add("SHARES_CHARGES", "SHARES_CHARGES");
            tableMapping.ColumnMappings.Add("TOTAL", "TOTAL");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("AVG_TOTAL", "AVG_TOTAL");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExpensesTracker.Properties.Settings.Default.Expenses_TrackerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SHARE_DETAIL_PROCEDURE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHARETRACKERID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Shares_TrackerDataset.SHARE_DETAIL_PROCEDUREDataTable dataTable, global::System.Nullable<int> SHARETRACKERID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SHARETRACKERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SHARETRACKERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Shares_TrackerDataset.SHARE_DETAIL_PROCEDUREDataTable GetData(global::System.Nullable<int> SHARETRACKERID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SHARETRACKERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(SHARETRACKERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            Shares_TrackerDataset.SHARE_DETAIL_PROCEDUREDataTable dataTable = new Shares_TrackerDataset.SHARE_DETAIL_PROCEDUREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT";
            tableMapping.ColumnMappings.Add("SHARES_TRANSACTION_ID", "SHARES_TRANSACTION_ID");
            tableMapping.ColumnMappings.Add("SHARES_TRANSACTION_CODE_ID", "SHARES_TRANSACTION_CODE_ID");
            tableMapping.ColumnMappings.Add("SHARES_TRANSACTION_CODE_VALUE", "SHARES_TRANSACTION_CODE_VALUE");
            tableMapping.ColumnMappings.Add("SHARES_TRANSACTION_AMT", "SHARES_TRANSACTION_AMT");
            tableMapping.ColumnMappings.Add("SHARES_TRANSACTION_DATE", "SHARES_TRANSACTION_DATE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExpensesTracker.Properties.Settings.Default.Expenses_TrackerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAT_ACCOUNT_VALUE", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable dataTable, global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable GetData(global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable dataTable = new Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_PAYIN_PAYOUTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHARE_TRACKER_PROCEDURE_DIVIDENDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SHARE_TRACKER_PROCEDURE_DIVIDENDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHARE_TRACKER_PROCEDURE_DIVIDEND";
            tableMapping.ColumnMappings.Add("SHARE_DIVIDEND_ID", "SHARE_DIVIDEND_ID");
            tableMapping.ColumnMappings.Add("SHARES_PRICE_AMT", "SHARES_PRICE_AMT");
            tableMapping.ColumnMappings.Add("DIVIDEND_DATE", "DIVIDEND_DATE");
            tableMapping.ColumnMappings.Add("SHARE_NAME", "SHARE_NAME");
            tableMapping.ColumnMappings.Add("IS_BANK_ACCOUNT", "IS_BANK_ACCOUNT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExpensesTracker.Properties.Settings.Default.Expenses_TrackerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SHARE_TRACKER_PROCEDURE_DIVIDEND";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAT_ACCOUNT_VALUE", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable dataTable, global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable GetData(global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable dataTable = new Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_DIVIDENDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING";
            tableMapping.ColumnMappings.Add("EXTRA_INCOMING_OUTGOING_ID", "EXTRA_INCOMING_OUTGOING_ID");
            tableMapping.ColumnMappings.Add("AMOUNT", "AMOUNT");
            tableMapping.ColumnMappings.Add("INCOMING_OUTGOING_DESCRIPTION", "INCOMING_OUTGOING_DESCRIPTION");
            tableMapping.ColumnMappings.Add("INCOMING_OUTGOING_CODE_ID", "INCOMING_OUTGOING_CODE_ID");
            tableMapping.ColumnMappings.Add("INCOMING_OUTGOING_CODE_VALUE", "INCOMING_OUTGOING_CODE_VALUE");
            tableMapping.ColumnMappings.Add("INCOMING_OUTGOING_DATE", "INCOMING_OUTGOING_DATE");
            tableMapping.ColumnMappings.Add("USER_ID", "USER_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExpensesTracker.Properties.Settings.Default.Expenses_TrackerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOING";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAT_ACCOUNT_VALUE", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable dataTable, global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable GetData(global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable dataTable = new Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_EXTRA_INCOMING_OUTGOINGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHARE_TRACKER_PROCEDURE_EXTRA_CHARGES";
            tableMapping.ColumnMappings.Add("SHARES_EXTRA_CHARGES_DESCRIPTION", "SHARES_EXTRA_CHARGES_DESCRIPTION");
            tableMapping.ColumnMappings.Add("SHARES_EXTRA_CHARGES_AMT", "SHARES_EXTRA_CHARGES_AMT");
            tableMapping.ColumnMappings.Add("SHARES_CHARGES_DATE", "SHARES_CHARGES_DATE");
            tableMapping.ColumnMappings.Add("SHARES_NAME", "SHARES_NAME");
            tableMapping.ColumnMappings.Add("SHARES_TRACKER_HEADER_ID", "SHARES_TRACKER_HEADER_ID");
            tableMapping.ColumnMappings.Add("IS_CONSIDER", "IS_CONSIDER");
            tableMapping.ColumnMappings.Add("SHARES_TRACKER_EXTRA_CHARGES_ID", "SHARES_TRACKER_EXTRA_CHARGES_ID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExpensesTracker.Properties.Settings.Default.Expenses_TrackerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGES";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAT_ACCOUNT_VALUE", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable dataTable, global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable GetData(global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable dataTable = new Shares_TrackerDataset.SHARE_TRACKER_PROCEDURE_EXTRA_CHARGESDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CURRENT_SHARE_PROCEDURETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CURRENT_SHARE_PROCEDURETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CURRENT_SHARE_PROCEDURE";
            tableMapping.ColumnMappings.Add("SHARES_TRACKER_HEADER_ID", "SHARES_TRACKER_HEADER_ID");
            tableMapping.ColumnMappings.Add("SHARES_NAME", "SHARES_NAME");
            tableMapping.ColumnMappings.Add("SHARE_AMT", "SHARE_AMT");
            tableMapping.ColumnMappings.Add("PROFIT_LOSS", "PROFIT_LOSS");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExpensesTracker.Properties.Settings.Default.Expenses_TrackerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.CURRENT_SHARE_PROCEDURE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEMAT_ACCOUNT_VALUE", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Shares_TrackerDataset.CURRENT_SHARE_PROCEDUREDataTable dataTable, global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Shares_TrackerDataset.CURRENT_SHARE_PROCEDUREDataTable GetData(global::System.Nullable<int> USERID, string DEMAT_ACCOUNT_VALUE) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(USERID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DEMAT_ACCOUNT_VALUE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(DEMAT_ACCOUNT_VALUE));
            }
            Shares_TrackerDataset.CURRENT_SHARE_PROCEDUREDataTable dataTable = new Shares_TrackerDataset.CURRENT_SHARE_PROCEDUREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHARE_WISE_PROFITTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SHARE_WISE_PROFITTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHARE_WISE_PROFIT";
            tableMapping.ColumnMappings.Add("SHARES_NAME", "SHARES_NAME");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ExpensesTracker.Properties.Settings.Default.Expenses_TrackerConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SHARE_WISE_PROFIT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Shares_TrackerDataset.SHARE_WISE_PROFITDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Shares_TrackerDataset.SHARE_WISE_PROFITDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Shares_TrackerDataset.SHARE_WISE_PROFITDataTable dataTable = new Shares_TrackerDataset.SHARE_WISE_PROFITDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(Shares_TrackerDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(Shares_TrackerDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(Shares_TrackerDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(Shares_TrackerDataset dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591