CREATE PROCEDURE MUTUAL_FUND_HEADER_PROCEDURE
@USERID INT,
@DEMAT_ACCOUNT_VALUE Varchar(100)
as
WITH MUTUALFUNDBUY(MUTUAL_FUND_ID, AMOUNT)
AS
(
SELECT HDR.MUTUAL_FUND_HEADER_ID AS SHARES_ID, ISNULL(SUM((BUY.MUTUAL_FUND_AMOUNT * BUY.MUTUAL_FUND_QUANTITY)+ ISNULL(BUY.MUTUAL_FUND_CHARGES,0)),0) AS AMOUNT FROM MUTUAL_FUND_HEADER HDR 
INNER JOIN MUTUAL_FUND_BUY BUY
ON HDR.MUTUAL_FUND_HEADER_ID = BUY.MUTUAL_FUND_HEADER_ID 
 GROUP BY HDR.MUTUAL_FUND_HEADER_ID
),
MUTUALFUNDSELL(MUTUAL_FUND_ID, AMOUNT)
AS
(
SELECT HDR.MUTUAL_FUND_HEADER_ID AS SHARES_ID, ISNULL(SUM((SEL.MUTUAL_FUND_AMOUNT * SEL.MUTUAL_FUND_QUANTITY) - ISNULL(SEL.MUTUAL_FUND_CHARGES,0)),0) AS AMOUNT FROM MUTUAL_FUND_HEADER HDR 
INNER JOIN MUTUAL_FUND_SELL SEL
ON HDR.MUTUAL_FUND_HEADER_ID = SEL.MUTUAL_FUND_HEADER_ID 
GROUP BY HDR.MUTUAL_FUND_HEADER_ID
)
SELECT HD.MUTUAL_FUND_HEADER_ID, HD.MUTUAL_FUND_NAME , (B.AMOUNT - A.AMOUNT) AS SHARE_AMT, 
CASE
WHEN (B.AMOUNT - A.AMOUNT ) > 0  THEN 'PROFIT'
 WHEN (B.AMOUNT - A.AMOUNT) < 0  THEN 'LOSS'
 ELSE 'EQUAL'
 END AS PROFIT_LOSS
FROM MUTUAL_FUND_HEADER HD
LEFT JOIN MUTUALFUNDBUY A
ON MUTUAL_FUND_HEADER_ID = A.MUTUAL_FUND_ID
LEFT JOIN MUTUALFUNDSELL B
ON A.MUTUAL_FUND_ID = B.MUTUAL_FUND_ID
WHERE HD.USER_ID = @USERID 
AND HD.DEMAT_ACCOUNT_VALUE = @DEMAT_ACCOUNT_VALUE
ORDER BY HD.MUTUAL_FUND_HEADER_ID DESC

GO