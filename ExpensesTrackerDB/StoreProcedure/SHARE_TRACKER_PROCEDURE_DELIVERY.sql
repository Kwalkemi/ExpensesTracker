ALTER PROCEDURE [dbo].[SHARE_TRACKER_PROCEDURE_DELIVERY]
@USERID INT,
@DEMAT_ACCOUNT_VALUE Varchar(100)
AS
;WITH SHARETRACKERBUY(SHARES_ID, AMOUNT)
AS
(
SELECT HDR.SHARES_TRACKER_HEADER_ID AS SHARES_ID, ISNULL(SUM((BUY.SHARES_PRICE_AMT * BUY.SHARES_QUANTITY)+ ISNULL(BUY.SHARES_CHARGES_AMT,0)),0) AS AMOUNT FROM SHARES_TRACKER_HEADER HDR 
INNER JOIN SHARES_TRACKER_BUY BUY
ON HDR.SHARES_TRACKER_HEADER_ID = BUY.SHARES_TRACKER_HEADER_ID 
WHERE SHARE_TYPE_CODE_VALUE = 'DELV'
 GROUP BY HDR.SHARES_TRACKER_HEADER_ID
),
SHARETRACKERSELL(SHARES_ID, AMOUNT)
AS
(
SELECT HDR.SHARES_TRACKER_HEADER_ID AS SHARES_ID, ISNULL(SUM((SEL.SHARES_PRICE_AMT * SEL.SHARES_QUANTITY) - ISNULL(SEL.SHARES_CHARGES_AMT,0)),0) AS AMOUNT FROM SHARES_TRACKER_HEADER HDR 
INNER JOIN SHARES_TRACKER_SELL SEL
ON HDR.SHARES_TRACKER_HEADER_ID = SEL.SHARES_TRACKER_HEADER_ID 
WHERE SHARE_TYPE_CODE_VALUE = 'DELV'
GROUP BY HDR.SHARES_TRACKER_HEADER_ID
)
SELECT HD.SHARES_TRACKER_HEADER_ID, HD.SHARES_NAME , (B.AMOUNT - A.AMOUNT) AS SHARE_AMT, 
CASE
WHEN (B.AMOUNT - A.AMOUNT ) > 0  THEN 'PROFIT'
 WHEN (B.AMOUNT - A.AMOUNT) < 0  THEN 'LOSS'
 ELSE 'EQUAL'
 END AS PROFIT_LOSS,
 (SELECT CODE_VALUE_DESCRIPTION FROM CODE_VALUE WHERE CODE_ID = 7 AND CODE_VALUE = HD.SERVICE_CODE_VALUE) AS SERVICES,
CASE
WHEN
 (SELECT COUNT(1) FROM SHARES_TRACKER_EXTRA_CHARGES EC WHERE EC.SHARES_TRACKER_HEADER_ID = HD.SHARES_TRACKER_HEADER_ID AND EC.IS_CONSIDER = 0) = 1
 THEN 'Not Entered'
END AS IS_DP_BILL
FROM SHARES_TRACKER_HEADER HD
LEFT JOIN SHARETRACKERBUY A
ON SHARES_TRACKER_HEADER_ID = A.SHARES_ID
LEFT JOIN SHARETRACKERSELL B
ON A.SHARES_ID = B.SHARES_ID
WHERE HD.USER_ID = @USERID AND SHARE_TYPE_CODE_VALUE = 'DELV'
AND HD.DEMAT_ACCOUNT_VALUE = @DEMAT_ACCOUNT_VALUE
ORDER BY HD.SHARES_TRACKER_HEADER_ID DESC